<?xml version="1.0" encoding="utf-8"?>
<xsd:schema id="CircuitsSchema" targetNamespace="http://schemas.microsoft.com/dsltools/Circuits" elementFormDefault="qualified" xmlns="http://schemas.microsoft.com/dsltools/Circuits" xmlns:core="http://schemas.microsoft.com/VisualStudio/2008/DslTools/Core" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:import id="CoreSchema" namespace="http://schemas.microsoft.com/VisualStudio/2008/DslTools/Core" />
  <!-- NamedElement -->
  <xsd:element name="NamedElement" abstract="true" type="NamedElement" substitutionGroup="core:modelElement" />
  <xsd:complexType name="NamedElement" abstract="true" >
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <!-- Property: Name -->
        <xsd:attribute name="name" type="xsd:string" use="required" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- NamedElement Moniker -->
  <xsd:element name="NamedElementMoniker" abstract="true" type="NamedElementMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="NamedElementMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for NamedElement instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
        <xsd:attribute name="name" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>Attribute to store the moniker string.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- ComponentModel -->
  <xsd:element name="componentModel" type="ComponentModel" substitutionGroup="NamedElement" />
  <xsd:complexType name="ComponentModel">
    <xsd:complexContent>
      <xsd:extension base="NamedElement">
        <xsd:sequence minOccurs="0" maxOccurs="1">
          <!-- Relationship: ComponentModelHasComments -->
          <xsd:element name="comments" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>Instances of ComponentModelHasComments</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:choice minOccurs="0" maxOccurs="unbounded" >
                  <xsd:element ref="componentModelHasComments">
                    <xsd:annotation>
                      <xsd:documentation>[Relationship deriving from ComponentModelHasComments needs to be serialized in full-form]</xsd:documentation>
                    </xsd:annotation>
                  </xsd:element>
                  <xsd:element ref="comment" >
                    <xsd:annotation>
                      <xsd:documentation>[Target role-player]</xsd:documentation>
                    </xsd:annotation>
                  </xsd:element>
                </xsd:choice>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <!-- Relationship: ComponentModelHasComponents -->
          <xsd:element name="components" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>Instances of ComponentModelHasComponents</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element ref="componentModelHasComponents" minOccurs="0" maxOccurs="unbounded">
                  <xsd:annotation>
                    <xsd:documentation>[Instance of ComponentModelHasComponents needs to be serialized in full-form]</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <!-- Relationship: ComponentModelHasJunctions -->
          <xsd:element name="junctions" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>Instances of ComponentModelHasJunctions</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:choice minOccurs="0" maxOccurs="unbounded" >
                  <xsd:element ref="componentModelHasJunctions">
                    <xsd:annotation>
                      <xsd:documentation>[Relationship deriving from ComponentModelHasJunctions needs to be serialized in full-form]</xsd:documentation>
                    </xsd:annotation>
                  </xsd:element>
                  <xsd:element ref="junction" >
                    <xsd:annotation>
                      <xsd:documentation>[Target role-player]</xsd:documentation>
                    </xsd:annotation>
                  </xsd:element>
                </xsd:choice>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
        <!-- dslVersion -->
        <xsd:attribute name="dslVersion" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Version of the model serialized in this file.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- ComponentModel Moniker -->
  <xsd:element name="componentModelMoniker" type="ComponentModelMoniker" substitutionGroup="NamedElementMoniker" />
  <xsd:complexType name="ComponentModelMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for ComponentModel instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="NamedElementMoniker">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- Component -->
  <xsd:element name="component" abstract="true" type="Component" substitutionGroup="NamedElement" />
  <xsd:complexType name="Component" abstract="true" >
    <xsd:complexContent>
      <xsd:extension base="NamedElement">
        <!-- Property: Polarity -->
        <xsd:attribute name="polarity" type="xsd:boolean" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- Component Moniker -->
  <xsd:element name="componentMoniker" abstract="true" type="ComponentMoniker" substitutionGroup="NamedElementMoniker" />
  <xsd:complexType name="ComponentMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for Component instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="NamedElementMoniker">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- Connection -->
  <xsd:element name="connection" abstract="true" type="Connection" substitutionGroup="NamedElement" />
  <xsd:complexType name="Connection" abstract="true" >
    <xsd:complexContent>
      <xsd:extension base="NamedElement">
        <xsd:sequence minOccurs="0" maxOccurs="1">
          <!-- Relationship: Wire -->
          <xsd:element name="targetConnections" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>Instances of Wire</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element ref="wire" minOccurs="0" maxOccurs="unbounded">
                  <xsd:annotation>
                    <xsd:documentation>[Instance of Wire needs to be serialized in full-form]</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- Connection Moniker -->
  <xsd:element name="connectionMoniker" abstract="true" type="ConnectionMoniker" substitutionGroup="NamedElementMoniker" />
  <xsd:complexType name="ConnectionMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for Connection instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="NamedElementMoniker">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- Comment -->
  <xsd:element name="comment" type="Comment" substitutionGroup="core:modelElement" />
  <xsd:complexType name="Comment">
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <xsd:sequence minOccurs="0" maxOccurs="1">
          <!-- Relationship: CommentsReferenceComponents -->
          <xsd:element name="subjects" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>Instances of CommentsReferenceComponents</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:choice minOccurs="0" maxOccurs="unbounded" >
                  <xsd:element ref="commentsReferenceComponents">
                    <xsd:annotation>
                      <xsd:documentation>[Relationship deriving from CommentsReferenceComponents needs to be serialized in full-form]</xsd:documentation>
                    </xsd:annotation>
                  </xsd:element>
                  <xsd:element ref="componentMoniker" >
                    <xsd:annotation>
                      <xsd:documentation>[Target role-player]</xsd:documentation>
                    </xsd:annotation>
                  </xsd:element>
                </xsd:choice>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
        <!-- Id -->
        <xsd:attribute name="Id" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <!-- Property: Text -->
        <xsd:attribute name="text" type="xsd:string" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- Comment Moniker -->
  <xsd:element name="commentMoniker" type="CommentMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="CommentMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for Comment instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
        <xsd:attribute name="Id" type="xsd:string" >
          <xsd:annotation>
            <xsd:documentation>Attribute to store the moniker string.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- Resistor -->
  <xsd:element name="resistor" type="Resistor" substitutionGroup="component" />
  <xsd:complexType name="Resistor">
    <xsd:complexContent>
      <xsd:extension base="Component">
        <xsd:sequence minOccurs="0" maxOccurs="1">
          <!-- Relationship: ResistorHasT1 -->
          <xsd:element name="t1" minOccurs="1" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>Instance of ResistorHasT1</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element ref="resistorHasT1" minOccurs="1" maxOccurs="1">
                  <xsd:annotation>
                    <xsd:documentation>[Instance of ResistorHasT1 needs to be serialized in full-form]</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <!-- Relationship: ResistorHasT2 -->
          <xsd:element name="t2" minOccurs="1" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>Instance of ResistorHasT2</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element ref="resistorHasT2" minOccurs="1" maxOccurs="1">
                  <xsd:annotation>
                    <xsd:documentation>[Instance of ResistorHasT2 needs to be serialized in full-form]</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
        <!-- Property: Resistance -->
        <xsd:attribute name="resistance" type="xsd:string" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- Resistor Moniker -->
  <xsd:element name="resistorMoniker" type="ResistorMoniker" substitutionGroup="componentMoniker" />
  <xsd:complexType name="ResistorMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for Resistor instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="ComponentMoniker">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- ComponentTerminal -->
  <xsd:element name="componentTerminal" type="ComponentTerminal" substitutionGroup="connection" />
  <xsd:complexType name="ComponentTerminal">
    <xsd:complexContent>
      <xsd:extension base="Connection">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- ComponentTerminal Moniker -->
  <xsd:element name="componentTerminalMoniker" type="ComponentTerminalMoniker" substitutionGroup="connectionMoniker" />
  <xsd:complexType name="ComponentTerminalMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for ComponentTerminal instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="ConnectionMoniker">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- Junction -->
  <xsd:element name="junction" type="Junction" substitutionGroup="connection" />
  <xsd:complexType name="Junction">
    <xsd:complexContent>
      <xsd:extension base="Connection">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- Junction Moniker -->
  <xsd:element name="junctionMoniker" type="JunctionMoniker" substitutionGroup="connectionMoniker" />
  <xsd:complexType name="JunctionMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for Junction instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="ConnectionMoniker">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- Transistor -->
  <xsd:element name="transistor" type="Transistor" substitutionGroup="component" />
  <xsd:complexType name="Transistor">
    <xsd:complexContent>
      <xsd:extension base="Component">
        <xsd:sequence minOccurs="0" maxOccurs="1">
          <!-- Relationship: TransistorHasBase -->
          <xsd:element name="base" minOccurs="1" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>Instance of TransistorHasBase</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:choice minOccurs="1" maxOccurs="1" >
                  <xsd:element ref="transistorHasBase">
                    <xsd:annotation>
                      <xsd:documentation>[Relationship deriving from TransistorHasBase needs to be serialized in full-form]</xsd:documentation>
                    </xsd:annotation>
                  </xsd:element>
                  <xsd:element ref="componentTerminal" >
                    <xsd:annotation>
                      <xsd:documentation>[Target role-player]</xsd:documentation>
                    </xsd:annotation>
                  </xsd:element>
                </xsd:choice>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <!-- Relationship: TransistorHasCollector -->
          <xsd:element name="collector" minOccurs="1" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>Instance of TransistorHasCollector</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:choice minOccurs="1" maxOccurs="1" >
                  <xsd:element ref="transistorHasCollector">
                    <xsd:annotation>
                      <xsd:documentation>[Relationship deriving from TransistorHasCollector needs to be serialized in full-form]</xsd:documentation>
                    </xsd:annotation>
                  </xsd:element>
                  <xsd:element ref="componentTerminal" >
                    <xsd:annotation>
                      <xsd:documentation>[Target role-player]</xsd:documentation>
                    </xsd:annotation>
                  </xsd:element>
                </xsd:choice>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <!-- Relationship: TransistorHasEmitter -->
          <xsd:element name="emitter" minOccurs="1" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>Instance of TransistorHasEmitter</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:choice minOccurs="1" maxOccurs="1" >
                  <xsd:element ref="transistorHasEmitter">
                    <xsd:annotation>
                      <xsd:documentation>[Relationship deriving from TransistorHasEmitter needs to be serialized in full-form]</xsd:documentation>
                    </xsd:annotation>
                  </xsd:element>
                  <xsd:element ref="componentTerminal" >
                    <xsd:annotation>
                      <xsd:documentation>[Target role-player]</xsd:documentation>
                    </xsd:annotation>
                  </xsd:element>
                </xsd:choice>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
        <!-- Property: Gain -->
        <xsd:attribute name="gain" type="xsd:string" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- Transistor Moniker -->
  <xsd:element name="transistorMoniker" type="TransistorMoniker" substitutionGroup="componentMoniker" />
  <xsd:complexType name="TransistorMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for Transistor instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="ComponentMoniker">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- Capacitor -->
  <xsd:element name="capacitor" type="Capacitor" substitutionGroup="component" />
  <xsd:complexType name="Capacitor">
    <xsd:complexContent>
      <xsd:extension base="Component">
        <xsd:sequence minOccurs="0" maxOccurs="1">
          <!-- Relationship: CapacitorHasT1 -->
          <xsd:element name="t1" minOccurs="1" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>Instance of CapacitorHasT1</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:choice minOccurs="1" maxOccurs="1" >
                  <xsd:element ref="capacitorHasT1">
                    <xsd:annotation>
                      <xsd:documentation>[Relationship deriving from CapacitorHasT1 needs to be serialized in full-form]</xsd:documentation>
                    </xsd:annotation>
                  </xsd:element>
                  <xsd:element ref="componentTerminal" >
                    <xsd:annotation>
                      <xsd:documentation>[Target role-player]</xsd:documentation>
                    </xsd:annotation>
                  </xsd:element>
                </xsd:choice>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <!-- Relationship: CapacitorHasT2 -->
          <xsd:element name="t2" minOccurs="1" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>Instance of CapacitorHasT2</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:choice minOccurs="1" maxOccurs="1" >
                  <xsd:element ref="capacitorHasT2">
                    <xsd:annotation>
                      <xsd:documentation>[Relationship deriving from CapacitorHasT2 needs to be serialized in full-form]</xsd:documentation>
                    </xsd:annotation>
                  </xsd:element>
                  <xsd:element ref="componentTerminal" >
                    <xsd:annotation>
                      <xsd:documentation>[Target role-player]</xsd:documentation>
                    </xsd:annotation>
                  </xsd:element>
                </xsd:choice>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
        <!-- Property: IsPolar -->
        <xsd:attribute name="isPolar" type="xsd:boolean" />
        <!-- Property: Capacitance -->
        <xsd:attribute name="capacitance" type="xsd:string" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- Capacitor Moniker -->
  <xsd:element name="capacitorMoniker" type="CapacitorMoniker" substitutionGroup="componentMoniker" />
  <xsd:complexType name="CapacitorMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for Capacitor instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="ComponentMoniker">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- ComponentModelHasComments -->
  <xsd:element name="componentModelHasComments" abstract="true" type="ComponentModelHasComments" substitutionGroup="core:modelElement" />
  <xsd:complexType name="ComponentModelHasComments" abstract="true" >
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <xsd:sequence minOccurs="0" maxOccurs="1">
          <!-- Target end Comment -->
          <xsd:element ref="comment" minOccurs="1" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>[Target role-player]</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- ComponentModelHasComments Moniker -->
  <xsd:element name="componentModelHasCommentsMoniker" abstract="true" type="ComponentModelHasCommentsMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="ComponentModelHasCommentsMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for ComponentModelHasComments instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- ComponentModelHasComponents -->
  <xsd:element name="componentModelHasComponents" type="ComponentModelHasComponents" substitutionGroup="core:modelElement" />
  <xsd:complexType name="ComponentModelHasComponents">
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <xsd:sequence minOccurs="0" maxOccurs="1">
          <!-- Target end Component -->
          <xsd:element ref="component" minOccurs="1" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>[Target role-player]</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- ComponentModelHasComponents Moniker -->
  <xsd:element name="componentModelHasComponentsMoniker" abstract="true" type="ComponentModelHasComponentsMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="ComponentModelHasComponentsMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for ComponentModelHasComponents instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- CommentsReferenceComponents -->
  <xsd:element name="commentsReferenceComponents" abstract="true" type="CommentsReferenceComponents" substitutionGroup="core:modelElement" />
  <xsd:complexType name="CommentsReferenceComponents" abstract="true" >
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <xsd:sequence minOccurs="0" maxOccurs="1">
          <!-- Target end Component -->
          <xsd:element ref="componentMoniker" minOccurs="1" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>[Target role-player]</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- CommentsReferenceComponents Moniker -->
  <xsd:element name="commentsReferenceComponentsMoniker" abstract="true" type="CommentsReferenceComponentsMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="CommentsReferenceComponentsMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for CommentsReferenceComponents instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- ComponentHasComponentTerminal -->
  <xsd:element name="componentHasComponentTerminal" abstract="true" type="ComponentHasComponentTerminal" substitutionGroup="core:modelElement" />
  <xsd:complexType name="ComponentHasComponentTerminal" abstract="true" >
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <xsd:sequence minOccurs="0" maxOccurs="1">
          <!-- Target end ComponentTerminal -->
          <xsd:element ref="componentTerminal" minOccurs="1" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>[Target role-player]</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- ComponentHasComponentTerminal Moniker -->
  <xsd:element name="componentHasComponentTerminalMoniker" abstract="true" type="ComponentHasComponentTerminalMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="ComponentHasComponentTerminalMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for ComponentHasComponentTerminal instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- Wire -->
  <xsd:element name="wire" type="Wire" substitutionGroup="core:modelElement" />
  <xsd:complexType name="Wire">
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <xsd:sequence minOccurs="0" maxOccurs="1">
          <!-- Target end Connection -->
          <xsd:element ref="connectionMoniker" minOccurs="1" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>[Target role-player]</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
        <!-- Property: IsDirected -->
        <xsd:attribute name="isDirected" type="xsd:boolean" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- Wire Moniker -->
  <xsd:element name="wireMoniker" abstract="true" type="WireMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="WireMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for Wire instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- ComponentModelHasJunctions -->
  <xsd:element name="componentModelHasJunctions" abstract="true" type="ComponentModelHasJunctions" substitutionGroup="core:modelElement" />
  <xsd:complexType name="ComponentModelHasJunctions" abstract="true" >
    <xsd:complexContent>
      <xsd:extension base="core:ModelElement">
        <xsd:sequence minOccurs="0" maxOccurs="1">
          <!-- Target end Junction -->
          <xsd:element ref="junction" minOccurs="1" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>[Target role-player]</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- ComponentModelHasJunctions Moniker -->
  <xsd:element name="componentModelHasJunctionsMoniker" abstract="true" type="ComponentModelHasJunctionsMoniker" substitutionGroup="core:modelElementMoniker" />
  <xsd:complexType name="ComponentModelHasJunctionsMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for ComponentModelHasJunctions instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="core:ModelElementMoniker">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- ResistorHasT1 -->
  <xsd:element name="resistorHasT1" type="ResistorHasT1" substitutionGroup="componentHasComponentTerminal" />
  <xsd:complexType name="ResistorHasT1">
    <xsd:complexContent>
      <xsd:extension base="ComponentHasComponentTerminal">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- ResistorHasT1 Moniker -->
  <xsd:element name="resistorHasT1Moniker" abstract="true" type="ResistorHasT1Moniker" substitutionGroup="componentHasComponentTerminalMoniker" />
  <xsd:complexType name="ResistorHasT1Moniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for ResistorHasT1 instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="ComponentHasComponentTerminalMoniker">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- ResistorHasT2 -->
  <xsd:element name="resistorHasT2" type="ResistorHasT2" substitutionGroup="componentHasComponentTerminal" />
  <xsd:complexType name="ResistorHasT2">
    <xsd:complexContent>
      <xsd:extension base="ComponentHasComponentTerminal">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- ResistorHasT2 Moniker -->
  <xsd:element name="resistorHasT2Moniker" abstract="true" type="ResistorHasT2Moniker" substitutionGroup="componentHasComponentTerminalMoniker" />
  <xsd:complexType name="ResistorHasT2Moniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for ResistorHasT2 instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="ComponentHasComponentTerminalMoniker">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- TransistorHasBase -->
  <xsd:element name="transistorHasBase" abstract="true" type="TransistorHasBase" substitutionGroup="componentHasComponentTerminal" />
  <xsd:complexType name="TransistorHasBase" abstract="true" >
    <xsd:complexContent>
      <xsd:extension base="ComponentHasComponentTerminal">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- TransistorHasBase Moniker -->
  <xsd:element name="transistorHasBaseMoniker" abstract="true" type="TransistorHasBaseMoniker" substitutionGroup="componentHasComponentTerminalMoniker" />
  <xsd:complexType name="TransistorHasBaseMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for TransistorHasBase instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="ComponentHasComponentTerminalMoniker">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- TransistorHasCollector -->
  <xsd:element name="transistorHasCollector" abstract="true" type="TransistorHasCollector" substitutionGroup="componentHasComponentTerminal" />
  <xsd:complexType name="TransistorHasCollector" abstract="true" >
    <xsd:complexContent>
      <xsd:extension base="ComponentHasComponentTerminal">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- TransistorHasCollector Moniker -->
  <xsd:element name="transistorHasCollectorMoniker" abstract="true" type="TransistorHasCollectorMoniker" substitutionGroup="componentHasComponentTerminalMoniker" />
  <xsd:complexType name="TransistorHasCollectorMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for TransistorHasCollector instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="ComponentHasComponentTerminalMoniker">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- TransistorHasEmitter -->
  <xsd:element name="transistorHasEmitter" abstract="true" type="TransistorHasEmitter" substitutionGroup="componentHasComponentTerminal" />
  <xsd:complexType name="TransistorHasEmitter" abstract="true" >
    <xsd:complexContent>
      <xsd:extension base="ComponentHasComponentTerminal">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- TransistorHasEmitter Moniker -->
  <xsd:element name="transistorHasEmitterMoniker" abstract="true" type="TransistorHasEmitterMoniker" substitutionGroup="componentHasComponentTerminalMoniker" />
  <xsd:complexType name="TransistorHasEmitterMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for TransistorHasEmitter instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="ComponentHasComponentTerminalMoniker">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- CapacitorHasT1 -->
  <xsd:element name="capacitorHasT1" abstract="true" type="CapacitorHasT1" substitutionGroup="componentHasComponentTerminal" />
  <xsd:complexType name="CapacitorHasT1" abstract="true" >
    <xsd:complexContent>
      <xsd:extension base="ComponentHasComponentTerminal">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- CapacitorHasT1 Moniker -->
  <xsd:element name="capacitorHasT1Moniker" abstract="true" type="CapacitorHasT1Moniker" substitutionGroup="componentHasComponentTerminalMoniker" />
  <xsd:complexType name="CapacitorHasT1Moniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for CapacitorHasT1 instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="ComponentHasComponentTerminalMoniker">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- CapacitorHasT2 -->
  <xsd:element name="capacitorHasT2" abstract="true" type="CapacitorHasT2" substitutionGroup="componentHasComponentTerminal" />
  <xsd:complexType name="CapacitorHasT2" abstract="true" >
    <xsd:complexContent>
      <xsd:extension base="ComponentHasComponentTerminal">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- CapacitorHasT2 Moniker -->
  <xsd:element name="capacitorHasT2Moniker" abstract="true" type="CapacitorHasT2Moniker" substitutionGroup="componentHasComponentTerminalMoniker" />
  <xsd:complexType name="CapacitorHasT2Moniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for CapacitorHasT2 instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="ComponentHasComponentTerminalMoniker">
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
</xsd:schema>


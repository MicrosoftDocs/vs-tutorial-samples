<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CompanyName.LanguageSm.LanguageSmDomainModel.Description" xml:space="preserve">
    <value>Description for CompanyName.LanguageSm.LanguageSm</value>
    <comment>Description for DslLibrary &apos;LanguageSm&apos;</comment>
  </data>
  <data name="CompanyName.LanguageSm.LanguageSmDomainModel.DisplayName" xml:space="preserve">
    <value>LanguageSm</value>
    <comment>DisplayName for DslLibrary &apos;LanguageSm&apos;</comment>
  </data>
  <data name="CompanyName.LanguageSm.ExampleModel.Description" xml:space="preserve">
    <value>The root in which all other elements are embedded. Appears as a diagram.</value>
    <comment>Description for DomainClass &apos;ExampleModel&apos;</comment>
  </data>
  <data name="CompanyName.LanguageSm.ExampleModel.DisplayName" xml:space="preserve">
    <value>Example Model</value>
    <comment>DisplayName for DomainClass &apos;ExampleModel&apos;</comment>
  </data>
  <data name="CompanyName.LanguageSm.ExampleElement.Description" xml:space="preserve">
    <value>Elements embedded in the model. Appear as boxes on the diagram.</value>
    <comment>Description for DomainClass &apos;ExampleElement&apos;</comment>
  </data>
  <data name="CompanyName.LanguageSm.ExampleElement.DisplayName" xml:space="preserve">
    <value>Example Element</value>
    <comment>DisplayName for DomainClass &apos;ExampleElement&apos;</comment>
  </data>
  <data name="CompanyName.LanguageSm.ExampleElement/Name.Description" xml:space="preserve">
    <value>Description for CompanyName.LanguageSm.ExampleElement.Name</value>
    <comment>Description for DomainProperty &apos;Name&apos; on DomainClass &apos;ExampleElement&apos;</comment>
  </data>
  <data name="CompanyName.LanguageSm.ExampleElement/Name.DisplayName" xml:space="preserve">
    <value>Name</value>
    <comment>DisplayName for DomainProperty &apos;Name&apos; on DomainClass &apos;ExampleElement&apos;</comment>
  </data>
  <data name="CompanyName.LanguageSm.ExampleModelHasElements.Description" xml:space="preserve">
    <value>Embedding relationship between the Model and Elements</value>
    <comment>Description for DomainClass &apos;ExampleModelHasElements&apos;</comment>
  </data>
  <data name="CompanyName.LanguageSm.ExampleModelHasElements.DisplayName" xml:space="preserve">
    <value>Example Model Has Elements</value>
    <comment>DisplayName for DomainClass &apos;ExampleModelHasElements&apos;</comment>
  </data>
  <data name="CompanyName.LanguageSm.ExampleModelHasElements/ExampleModel.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainRole &apos;ExampleModel&apos; on DomainRelationship &apos;ExampleModelHasElements&apos;</comment>
  </data>
  <data name="CompanyName.LanguageSm.ExampleModelHasElements/ExampleModel.DisplayName" xml:space="preserve">
    <value>Example Model</value>
    <comment>DisplayName for DomainRole &apos;ExampleModel&apos; on DomainRelationship &apos;ExampleModelHasElements&apos;</comment>
  </data>
  <data name="CompanyName.LanguageSm.ExampleModelHasElements/ExampleModel.PropertyDisplayName" xml:space="preserve">
    <value>Elements</value>
    <comment>PropertyDisplayName for DomainRole &apos;ExampleModel&apos; on DomainRelationship &apos;ExampleModelHasElements&apos;</comment>
  </data>
  <data name="CompanyName.LanguageSm.ExampleModelHasElements/Element.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainRole &apos;Element&apos; on DomainRelationship &apos;ExampleModelHasElements&apos;</comment>
  </data>
  <data name="CompanyName.LanguageSm.ExampleModelHasElements/Element.DisplayName" xml:space="preserve">
    <value>Element</value>
    <comment>DisplayName for DomainRole &apos;Element&apos; on DomainRelationship &apos;ExampleModelHasElements&apos;</comment>
  </data>
  <data name="CompanyName.LanguageSm.ExampleModelHasElements/Element.PropertyDisplayName" xml:space="preserve">
    <value>Example Model</value>
    <comment>PropertyDisplayName for DomainRole &apos;Element&apos; on DomainRelationship &apos;ExampleModelHasElements&apos;</comment>
  </data>
  <data name="CompanyName.LanguageSm.ExampleElementReferencesTargets.Description" xml:space="preserve">
    <value>Reference relationship between Elements.</value>
    <comment>Description for DomainClass &apos;ExampleElementReferencesTargets&apos;</comment>
  </data>
  <data name="CompanyName.LanguageSm.ExampleElementReferencesTargets.DisplayName" xml:space="preserve">
    <value>Example Element References Targets</value>
    <comment>DisplayName for DomainClass &apos;ExampleElementReferencesTargets&apos;</comment>
  </data>
  <data name="CompanyName.LanguageSm.ExampleElementReferencesTargets/Source.Description" xml:space="preserve">
    <value>Description for CompanyName.LanguageSm.ExampleRelationship.Target</value>
    <comment>Description for DomainRole &apos;Source&apos; on DomainRelationship &apos;ExampleElementReferencesTargets&apos;</comment>
  </data>
  <data name="CompanyName.LanguageSm.ExampleElementReferencesTargets/Source.DisplayName" xml:space="preserve">
    <value>Source</value>
    <comment>DisplayName for DomainRole &apos;Source&apos; on DomainRelationship &apos;ExampleElementReferencesTargets&apos;</comment>
  </data>
  <data name="CompanyName.LanguageSm.ExampleElementReferencesTargets/Source.PropertyDisplayName" xml:space="preserve">
    <value>Targets</value>
    <comment>PropertyDisplayName for DomainRole &apos;Source&apos; on DomainRelationship &apos;ExampleElementReferencesTargets&apos;</comment>
  </data>
  <data name="CompanyName.LanguageSm.ExampleElementReferencesTargets/Target.Description" xml:space="preserve">
    <value>Description for CompanyName.LanguageSm.ExampleRelationship.Source</value>
    <comment>Description for DomainRole &apos;Target&apos; on DomainRelationship &apos;ExampleElementReferencesTargets&apos;</comment>
  </data>
  <data name="CompanyName.LanguageSm.ExampleElementReferencesTargets/Target.DisplayName" xml:space="preserve">
    <value>Target</value>
    <comment>DisplayName for DomainRole &apos;Target&apos; on DomainRelationship &apos;ExampleElementReferencesTargets&apos;</comment>
  </data>
  <data name="CompanyName.LanguageSm.ExampleElementReferencesTargets/Target.PropertyDisplayName" xml:space="preserve">
    <value>Sources</value>
    <comment>PropertyDisplayName for DomainRole &apos;Target&apos; on DomainRelationship &apos;ExampleElementReferencesTargets&apos;</comment>
  </data>
  <data name="CompanyName.LanguageSm.ExampleShape.Description" xml:space="preserve">
    <value>Shape used to represent ExampleElements on a Diagram.</value>
    <comment>Description for DomainClass &apos;ExampleShape&apos;</comment>
  </data>
  <data name="CompanyName.LanguageSm.ExampleShape.DisplayName" xml:space="preserve">
    <value>Example Shape</value>
    <comment>DisplayName for DomainClass &apos;ExampleShape&apos;</comment>
  </data>
  <data name="ExampleShapeNameDecoratorDefaultText" xml:space="preserve">
    <value>NameDecorator</value>
    <comment>Text decorator default text</comment>
  </data>
  <data name="CompanyName.LanguageSm.ExampleConnector.Description" xml:space="preserve">
    <value>Connector between the ExampleShapes. Represents ExampleRelationships on the Diagram.</value>
    <comment>Description for DomainClass &apos;ExampleConnector&apos;</comment>
  </data>
  <data name="CompanyName.LanguageSm.ExampleConnector.DisplayName" xml:space="preserve">
    <value>Example Connector</value>
    <comment>DisplayName for DomainClass &apos;ExampleConnector&apos;</comment>
  </data>
  <data name="FormatList" xml:space="preserve">
    <value>LanguageSm (*.sm)|*.sm</value>
    <comment>A list of file format specifiers for the Save dialog box</comment>
  </data>
  <data name="ModelExplorerTitle" xml:space="preserve">
    <value>LanguageSm Explorer</value>
    <comment>Model Explorer Toolwindow title</comment>
  </data>
  <data name="CompanyName.LanguageSm.LanguageSmDiagram.Description" xml:space="preserve">
    <value>Description for CompanyName.LanguageSm.LanguageSmDiagram</value>
    <comment>Description for DomainClass &apos;LanguageSmDiagram&apos;</comment>
  </data>
  <data name="CompanyName.LanguageSm.LanguageSmDiagram.DisplayName" xml:space="preserve">
    <value>Minimal Language Diagram</value>
    <comment>DisplayName for DomainClass &apos;LanguageSmDiagram&apos;</comment>
  </data>
  <data name="LanguageSmToolboxTab" xml:space="preserve">
    <value>LanguageSm</value>
    <comment>Toolbox item tab name</comment>
  </data>
  <data name="ExampleElementToolboxItem" xml:space="preserve">
    <value>ExampleElement</value>
    <comment>Toolbox item name</comment>
  </data>
  <data name="ExampleElementToolboxTooltip" xml:space="preserve">
    <value>Create an ExampleElement</value>
    <comment>Toolbox tooltip text</comment>
  </data>
  <data name="ExampleRelationshipToolboxItem" xml:space="preserve">
    <value>ExampleRelationship</value>
    <comment>Toolbox item name</comment>
  </data>
  <data name="ExampleRelationshipToolboxTooltip" xml:space="preserve">
    <value>Drag between ExampleElements to create an ExampleRelationship</value>
    <comment>Toolbox tooltip text</comment>
  </data>
  <data name="UnresolvedToolboxItem" xml:space="preserve">
    <value>ToolboxItem {0} was not found</value>
    <comment>Invalid toolId</comment>
  </data>
  <data name="UnsupportedToolboxFormat" xml:space="preserve">
    <value>Unsupported toolbox format: {0}</value>
    <comment>Unsupported format Id</comment>
  </data>
  <data name="UnrecognizedElementType" xml:space="preserve">
    <value>ElementType {0} is not recognized as a type of domain class which belongs to this domain model.</value>
    <comment>Incorrect ElementType passed in to Model.CreateElement method</comment>
  </data>
  <data name="UnrecognizedElementLinkType" xml:space="preserve">
    <value>ElementLinkType {0} is not recognized as a type of domain relationship which belongs to this domain model.</value>
    <comment>Incorrect ElementLinkType passed in to Model.CreateElementLink method</comment>
  </data>
  <data name="AmbiguousSchema" xml:space="preserve">
    <value>More than one schema found for target namespace &apos;{0}&apos;, use the first one at &apos;{1}&apos;.</value>
    <comment>Serialization Warning: AmbiguousSchema</comment>
  </data>
  <data name="ExpectingFullFormRelationship" xml:space="preserve">
    <value>Element &apos;{0}&apos; is treated as the target role-player of a relationship &apos;{1}&apos; instance, which should be serialized in full-form.</value>
    <comment>Serialization Warning: ExpectingFullFormRelationship</comment>
  </data>
  <data name="ExpectingShortFormRelationship" xml:space="preserve">
    <value>Instances of relationship &apos;{0}&apos; should be serialized in short-form.</value>
    <comment>Serialization Warning: ExpectingShortFormRelationship</comment>
  </data>
  <data name="IgnoredPropertyValue" xml:space="preserve">
    <value>Invalid property value &apos;{0}&apos; for property &apos;{1}&apos; with type &apos;{2}&apos;, ignored.</value>
    <comment>Serialization Warning: IgnoredPropertyValue</comment>
  </data>
  <data name="MissingId" xml:space="preserve">
    <value>Missing &apos;Id&apos; attribute, a new Guid &apos;{0}&apos; is auto-generated.</value>
    <comment>Serialization Warning: MissingId</comment>
  </data>
  <data name="MonikerResolvedToDuplicateLink" xml:space="preserve">
    <value>Resolving moniker &apos;{0}&apos; causes a duplicate link to be created, so the link and the moniker are ignored.</value>
    <comment>Serialization Warning: MonikerResolvedToDuplicateLink</comment>
  </data>
  <data name="NoSchema" xml:space="preserve">
    <value>Cannot find a schema that defines target namespace &apos;{0}&apos;, schema validation skipped.</value>
    <comment>Serialization Warning: NoSchema</comment>
  </data>
  <data name="UnexpectedXmlElement" xml:space="preserve">
    <value>Unexpected XML element &apos;{0}&apos;, ignored.</value>
    <comment>Serialization Warning: UnexpectedXmlElement</comment>
  </data>
  <data name="AmbiguousMoniker" xml:space="preserve">
    <value>Ambiguous moniker &apos;{0}&apos; encountered. It is used for both &apos;{1}&apos; and &apos;{2}&apos;.</value>
    <comment>Serialization Error: AmbiguousMoniker</comment>
  </data>
  <data name="CannotMonikerizeElement" xml:space="preserve">
    <value>Instances of DomainClass &apos;{0}&apos; cannot be serialized as a moniker.
A DomainClass can be serialized as a moniker only if 
1) it has a defined/inherited DomainProperty marked as IsMonikerKey=true, or 
2) it is marked/inherited with SerializeId=true.</value>
    <comment>Serialization Error: CannotMonikerizeElement</comment>
  </data>
  <data name="CannotOpenDocument" xml:space="preserve">
    <value>Error encountered, check Error List window for details.</value>
    <comment>Serialization Error: CannotOpenDocument</comment>
  </data>
  <data name="CannotSaveDocument" xml:space="preserve">
    <value>Error encountered, check Error List window for details.</value>
    <comment>Serialization Error: CannotSaveDocument</comment>
  </data>
  <data name="DanglingRelationship" xml:space="preserve">
    <value>Relationship &apos;{0}&apos; instance is missing target role-player.</value>
    <comment>Serialization Error: DanglingRelationship</comment>
  </data>
  <data name="InvalidPropertyValue" xml:space="preserve">
    <value>Invalid property value &apos;{0}&apos; for property &apos;{1}&apos; with type &apos;{2}&apos;.</value>
    <comment>Serialization Error: InvalidPropertyValue</comment>
  </data>
  <data name="MissingMoniker" xml:space="preserve">
    <value>Missing moniker. A moniker is expected in attribute &apos;{0}&apos;.</value>
    <comment>Serialization Error: MissingMoniker</comment>
  </data>
  <data name="MissingTransaction" xml:space="preserve">
    <value>This must be called within the context of an active transaction.</value>
    <comment>Serialization Error: MissingTransaction</comment>
  </data>
  <data name="UnresolvedMoniker" xml:space="preserve">
    <value>Cannot resolve moniker &apos;{0}&apos;.</value>
    <comment>Serialization Error: UnresolvedMoniker</comment>
  </data>
  <data name="VersionMismatch" xml:space="preserve">
    <value>Unsupported version &apos;{0}&apos;, can only support &apos;{1}&apos;.</value>
    <comment>Serialization Error: VersionMismatch</comment>
  </data>
  <data name="CannotCloseExistingDiagramDocument" xml:space="preserve">
    <value>Diagram file &apos;{0}&apos; cannot be closed.</value>
    <comment>User cancel closing diagram file. Hence, the DSL model file cannot be opened</comment>
  </data>
  <data name="BindingErrorOccurred" xml:space="preserve">
    <value>Extensions for this designer may not be found as a MEF binding error has occurred. The error that occurred was:
{0}</value>
    <comment>MEF binding error occurred - exception message being logged in the error window so the user is aware.</comment>
  </data>
  <data name="InvalidSaveRootElementType" xml:space="preserve">
    <value>&apos;{0}&apos; is not a valid root element type.</value>
    <comment>Exception message used if an invalid root element type is passed to IDomainModelSerializer.SaveModel / SaveModelAndDiagram</comment>
  </data>
  <data name="InvalidSaveDiagramType" xml:space="preserve">
    <value>&apos;{0}&apos; is not a valid diagram type.</value>
    <comment>Exception message used if an invalid diagram type is passed to IDomainModelSerializer.SaveModelAndDiagram</comment>
  </data>
  <data name="MinimumMultiplicityMissingLink" xml:space="preserve">
    <value>{0} {1} has no {2}.</value>
    <comment>Multiplicity underflow validation.</comment>
  </data>
  <data name="SaveOperationCancelled" xml:space="preserve">
    <value>Save operation cancelled.</value>
    <comment>Message when save is cancelled on validation errors</comment>
  </data>
  <data name="SaveValidationFailed" xml:space="preserve">
    <value>There were validation errors, continue save?</value>
    <comment>Message when validation errors are found on save</comment>
  </data>
  <data name="UnloadableSaveValidationFailed" xml:space="preserve">
    <value>There were validation errors. Continuing to save may cause the file to become unloadable, do you want to continue?</value>
    <comment>Message when validation errors are found on save that will cause file to become unloadable</comment>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="ExampleElementToolboxBitmap" type="System.Resources.ResXFileRef, System.Windows.Forms" xml:space="preserve">
    <value>..\resources\exampleshapetoolbitmap.bmp;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
    <comment>Toolbox item image</comment>
  </data>
  <data name="ExampleRelationshipToolboxBitmap" type="System.Resources.ResXFileRef, System.Windows.Forms" xml:space="preserve">
    <value>..\resources\exampleconnectortoolbitmap.bmp;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
    <comment>Toolbox item image</comment>
  </data>
</root>


